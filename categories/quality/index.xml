<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quality on implementationDetails()</title><link>https://boehrsi.github.io/implementation-details-flutter/categories/quality/</link><description>Recent content in Quality on implementationDetails()</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Sep 2020 22:49:00 +0200</lastBuildDate><atom:link href="https://boehrsi.github.io/implementation-details-flutter/categories/quality/index.xml" rel="self" type="application/rss+xml"/><item><title>Singletons with factory constructors</title><link>https://boehrsi.github.io/implementation-details-flutter/entries/singletons-with-factory-constructors/</link><pubDate>Mon, 14 Sep 2020 22:49:00 +0200</pubDate><guid>https://boehrsi.github.io/implementation-details-flutter/entries/singletons-with-factory-constructors/</guid><description>Singletons are used to provide a single instance of an object to the whole project. Even though there are multiple ways to achieve this, one of the cleanest is to use a factory constructor in conjunction with a private constructor.</description></item><item><title>Underscore for unused parameters</title><link>https://boehrsi.github.io/implementation-details-flutter/entries/underscore-for-unused-parameters/</link><pubDate>Sat, 12 Sep 2020 16:00:00 +0200</pubDate><guid>https://boehrsi.github.io/implementation-details-flutter/entries/underscore-for-unused-parameters/</guid><description>Sometimes you have to deal with given functions, interface implementations or builders, with parameters you don&amp;rsquo;t use. When utilizing those you can use an underscore to actively mark unneeded parameters as not used in your code. You can use multiple underscores if multiple parameters are unused.</description></item></channel></rss>